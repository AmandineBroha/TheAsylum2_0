
import java.awt.Frame;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextArea;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author poste
 */
public class NewJDialog extends javax.swing.JDialog {
    /* SINGLETON */
    public static NewJDialog mainWindow;
    public static JTextArea getInstructions(){ return mainWindow.instructions; }
    
    /* TEXT IN CONSOLE */
    public static void setTextInConsole(String text)
    {
        getInstructions().setText(text);
    }
    public static void addTextInConsole(String text)
    {
        String oldText = getInstructions().getText();
        String newText = oldText + "\n"+ text;
        getInstructions().setText(newText);
    }
    
    public static Game game = new Game();
    private boolean porte1 = false;
    private boolean porte2 = false;
    private boolean porte3 = false;
    private int manche=1;
    /**
     * Creates new form NewJDialog
     */
    public NewJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        mainWindow = this;
        //
        this.requestFocus();
        parent.addKeyListener(new KeyListener() {
            @Override
            public void keyPressed(KeyEvent e) {
                System.out.println("HEY");
                switch(e.getKeyCode())
                {
                    case KeyEvent.VK_LEFT:
                        leftArrowActionPerformed(null);
                        break;
                    case KeyEvent.VK_RIGHT:
                        rightArrowActionPerformed(null);
                        break;
                    case KeyEvent.VK_UP:
                        upArrowActionPerformed(null);
                        break;
                    case KeyEvent.VK_DOWN:
                        downArrowActionPerformed(null);
                        break;
                }
            }

            @Override
            public void keyTyped(KeyEvent e) {
                keyPressed(e);
            }

            @Override
            public void keyReleased(KeyEvent e) {
                keyPressed(e);
            }

        });
        
        
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        retryPane = new javax.swing.JDialog(this, true);
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        retryButton = new javax.swing.JButton();
        quitButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        enigmaDialog = new javax.swing.JDialog(this, true);
        answer1 = new javax.swing.JRadioButton();
        answer2 = new javax.swing.JRadioButton();
        answer3 = new javax.swing.JRadioButton();
        answer4 = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        okEnigmaButton = new javax.swing.JButton();
        enigmaButtons = new javax.swing.ButtonGroup();
        scene = new javax.swing.JLabel();
        choicesButton = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        downArrow = new javax.swing.JButton();
        leftArrow = new javax.swing.JButton();
        rightArrow = new javax.swing.JButton();
        upArrow = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        instructions = new javax.swing.JTextArea();
        helpButton = new javax.swing.JButton();
        goButton = new javax.swing.JButton();
        hpCounter = new javax.swing.JLabel();
        itemList = new javax.swing.JComboBox();

        retryPane.setAlwaysOnTop(true);
        retryPane.setMinimumSize(new java.awt.Dimension(350, 240));

        jLabel2.setFont(new java.awt.Font("Chiller", 1, 36)); // NOI18N
        jLabel2.setText("YOU ARE DEAD!");

        jLabel3.setFont(new java.awt.Font("Chiller", 0, 24)); // NOI18N
        jLabel3.setText("          Try again?");

        retryButton.setText("Yes!");
        retryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retryButtonActionPerformed(evt);
            }
        });

        quitButton.setText("No, I quit");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout retryPaneLayout = new javax.swing.GroupLayout(retryPane.getContentPane());
        retryPane.getContentPane().setLayout(retryPaneLayout);
        retryPaneLayout.setHorizontalGroup(
            retryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(retryPaneLayout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addGroup(retryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(69, Short.MAX_VALUE))
            .addGroup(retryPaneLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(retryButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(quitButton)
                .addGap(46, 46, 46))
        );
        retryPaneLayout.setVerticalGroup(
            retryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(retryPaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(46, 46, 46)
                .addGroup(retryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(retryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("jLabel1");

        enigmaButtons.add(answer1);
        answer1.setText("answer 1");
        answer1.setVisible(false);

        enigmaButtons.add(answer2);
        answer2.setText("answer 2");
        answer2.setVisible(false);

        enigmaButtons.add(answer3);
        answer3.setText("answer 3");
        answer3.setVisible(false);

        enigmaButtons.add(answer4);
        answer4.setText("answer 4");
        answer4.setVisible(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("<html>To get a reward,</br>answer the enigma!</html>");
        jLabel6.setToolTipText("");

        jLabel5.setText("jLabel4");

        okEnigmaButton.setText("OK");
        okEnigmaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okEnigmaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout enigmaDialogLayout = new javax.swing.GroupLayout(enigmaDialog.getContentPane());
        enigmaDialog.getContentPane().setLayout(enigmaDialogLayout);
        enigmaDialogLayout.setHorizontalGroup(
            enigmaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enigmaDialogLayout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addGroup(enigmaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enigmaDialogLayout.createSequentialGroup()
                        .addGroup(enigmaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(enigmaDialogLayout.createSequentialGroup()
                                .addComponent(answer3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(answer4))
                            .addGroup(enigmaDialogLayout.createSequentialGroup()
                                .addComponent(answer1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(answer2)))
                        .addGap(80, 80, 80))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enigmaDialogLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))))
            .addGroup(enigmaDialogLayout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(okEnigmaButton)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(enigmaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enigmaDialogLayout.createSequentialGroup()
                    .addContainerGap(63, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(44, 44, 44)))
        );
        enigmaDialogLayout.setVerticalGroup(
            enigmaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enigmaDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(enigmaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(answer1)
                    .addComponent(answer2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(enigmaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(answer4)
                    .addComponent(answer3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(okEnigmaButton)
                .addGap(21, 21, 21))
            .addGroup(enigmaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(enigmaDialogLayout.createSequentialGroup()
                    .addGap(64, 64, 64)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(89, Short.MAX_VALUE)))
        );

        enigmaButtons.add(answer1);
        enigmaButtons.add(answer2);
        enigmaButtons.add(answer3);
        enigmaButtons.add(answer4);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        scene.setIcon(new javax.swing.ImageIcon(getClass().getResource("/garden.png"))); // NOI18N

        choicesButton.setText("Choices");
        choicesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choicesButtonActionPerformed(evt);
            }
        });

        jRadioButton1.setVisible(false);
        jRadioButton2.setVisible(false);
        jRadioButton3.setVisible(false);
        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Rock");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Paper");

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Scissors");

        downArrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Actions-go-down-icon.png"))); // NOI18N
        downArrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downArrowActionPerformed(evt);
            }
        });

        leftArrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Actions-go-previous-icon.png"))); // NOI18N
        leftArrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftArrowActionPerformed(evt);
            }
        });

        rightArrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Actions-go-next-icon.png"))); // NOI18N
        rightArrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightArrowActionPerformed(evt);
            }
        });

        upArrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Actions-go-up-icon.png"))); // NOI18N
        upArrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upArrowActionPerformed(evt);
            }
        });

        instructions.setEditable(false);
        instructions.setColumns(20);
        instructions.setRows(5);
        instructions.setText(game.printWelcome());
        jScrollPane2.setViewportView(instructions);

        helpButton.setText("Help");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        goButton.setVisible(false);
        goButton.setText("Go!");
        goButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goButtonActionPerformed(evt);
            }
        });

        hpCounter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hp4.png"))); // NOI18N
        hpCounter.setToolTipText("");

        itemList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        itemList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        itemList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(scene, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(hpCounter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(leftArrow, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(upArrow, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(downArrow, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(rightArrow, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(179, 179, 179)
                                .addComponent(itemList, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(choicesButton)
                            .addComponent(goButton)
                            .addComponent(helpButton))
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton1))
                        .addGap(14, 14, 14)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scene, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(upArrow, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(downArrow, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(leftArrow, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addComponent(rightArrow, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(itemList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(choicesButton))
                                .addGap(48, 48, 48))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hpCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(helpButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jRadioButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButton3)))
                        .addGap(1, 1, 1)
                        .addComponent(goButton)))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //returns whether the player is still alive
    private void Wait()
    {
        try {
                Thread.sleep(300);
            } 
        catch (InterruptedException ex) {
                Logger.getLogger(NewJDialog.class.getName()).log(Level.SEVERE, null, ex);
            } 
    }
    
    private boolean isAlive()
    {
        return game.player.getHealthPoint() > 0;
    }
    
    private boolean isChecked()
    {
         if (game.getCurrentRoom().getDescription()=="in the entry hall")
         {
             return true;
         }
         return false;
    }
    
    private void setChoicesVisible() {
        jRadioButton1.setVisible(true);
        jRadioButton2.setVisible(true);
        jRadioButton3.setVisible(true);
    }
     private void setChoicesInvisible() {
        jRadioButton1.setVisible(false);
        jRadioButton2.setVisible(false);
        jRadioButton3.setVisible(false);
    }
     
    private void setAnswersVisible()
    {
        answer1.setVisible(true);
        answer2.setVisible(true);
        answer3.setVisible(true);
        answer4.setVisible(true);
    }
    
    private void setAnswersInvisible()
    {
        enigmaDialog.setVisible(false);
    }
     
    public javax.swing.JDialog getRetryPane()
    {
        return retryPane;
    }
    
    private void setHP() 
    {
        int hp = game.player.getHealthPoint();
        switch(hp)
        
        {
            case 0: hpCounter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hp0.png")));
                break;
            case 1: hpCounter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hp1.png")));
                break;
            case 2: hpCounter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hp2.png")));
                break;
            case 3: hpCounter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hp3.png")));
                break;
            case 4: hpCounter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hp4.png")));
                break;
        }
    }
    
    private boolean isTheRoom(String description)
    {
        return game.getCurrentRoom().getDescription().equals(description);
    }
    
    //Checks if there is an enemy in the room
    private boolean isThereZombie()
    {
        return game.getCurrentRoom().hasCharacter() && game.getCurrentRoom().getCharacter().isEnemy();
    }
    //Checks if there is an Enigma Character
    private boolean isThereEnigma()
    {
        return game.getCurrentRoom().hasCharacter() && !game.getCurrentRoom().getCharacter().isEnemy();
    }
    
    private void characterMessage() {
        addTextInConsole(game.getCurrentRoom().getCharacter().toString());
    }
    private void refreshItemList(){
        itemList.removeAllItems();
         for(Item i : game.player.getListItem())
        {
           itemList.addItem(i.getDescription());
        }
    }
    
    private void launchEnigma()
    {
        if (isThereEnigma())
        {
            
            CharacterEnigma sphynx = (CharacterEnigma)game.getCurrentRoom().getCharacter();
            int choice;
            switch(sphynx.getName())
            {
                case "Dr. Zeus": choice = 0;
                    break;
                case "The Ninja Turtles": choice = 1;
                    break;
                case "Simba": choice = 8;
                    break;
                case "Poney King": choice = 2;
                    break;
                case "Helpy, the evil robot,": choice = 3;
                    break;
                default: choice = -1;
            }
            if (choice>=0)
            {
                Enigma theEnigma = sphynx.pickEnigma(choice);
                String[] theAnswers = theEnigma.getAnswers();
                jLabel5.setText(theEnigma.getQuestion());
                answer1.setText(theAnswers[0]);
                answer2.setText(theAnswers[1]);
                answer3.setText(theAnswers[2]);
                answer4.setText(theAnswers[3]);
            }
            enigmaDialog.setVisible(true);
        }
    }
    
    private void choicesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choicesButtonActionPerformed
        if (isThereZombie())
        {
            setChoicesVisible();
            goButton.setVisible(true);
        }        
        else
        { 
        setChoicesInvisible();
        goButton.setVisible(false);
        }
    }//GEN-LAST:event_choicesButtonActionPerformed

    private void downArrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downArrowActionPerformed
        if (!isThereZombie() && isAlive())
        {
            game.goRoom(new Command("go","south"));
            game.getCurrentRoom().onEnter();
            scene.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getCurrentRoom().getImage()))); 
            if (isTheRoom("in the entry hall") && porte1 && porte2 && porte3 && (game.getkeyItem("Fairy dust")==false))
            {
                addTextInConsole(game.player.takeItem(game.fairy)
                    + "Its magical powers have open\none of the doors!");
                   refreshItemList();
            }
        }
        else if (isThereZombie())
        {
        characterMessage();
        setTextInConsole("You can't escape!");
        }
    }//GEN-LAST:event_downArrowActionPerformed

    private void rightArrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightArrowActionPerformed
        if (!isThereZombie() && isAlive())
        {
        game.goRoom(new Command("go","east"));
        game.getCurrentRoom().onEnter();
        scene.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getCurrentRoom().getImage())));
        porte3=isChecked();
            if (isTheRoom("in the entry hall") && game.getkeyItem("key"))
            {
                scene.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hallzombie.png")));
                game.getCurrentRoom().addCharacter(new Character("A zombie", game.getCurrentRoom(), 2, true));
                characterMessage();
            }
        }
        else if (isTheRoom("in the laboratory"))
        {
            
        }
        else if (isThereZombie())
        {
            setTextInConsole("You can't escape!");
        }
        launchEnigma();
        
    }//GEN-LAST:event_rightArrowActionPerformed

    private void leftArrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftArrowActionPerformed
        
        if (!isThereZombie() && isAlive())
        {
        game.goRoom(new Command("go","west"));
        game.getCurrentRoom().onEnter();
        scene.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getCurrentRoom().getImage())));
        porte1=isChecked();
            if (isTheRoom("in Robert's bedroom") && !game.getkeyItem("note"))
            {
                if (game.getkeyItem("note")){
                    addTextInConsole("You already took the note");
                    refreshItemList();
                }
                else {
                    addTextInConsole(game.player.takeItem(game.note));
                    refreshItemList();
                }
            }
        }
        else if (isThereZombie())
        {
            setTextInConsole("You can't escape!");
        }
        
 //       if ((game.getCurrentRoom().getDescription() == "in the savane Papy Brossard") && (game.simba == true )) {
//            
 //           int i=0;
//
 //           while (i <= 10)
//            {
//                jLabel4.setVisible(true); 
 //               i++;
//            }
//            jLabel4.setVisible(false);
//            //a verifier pour le bisous!!!
//            addTextInConsole(game.player.takeItem(game.bisous));
//        }
        launchEnigma();
        
    }//GEN-LAST:event_leftArrowActionPerformed

    private void upArrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upArrowActionPerformed
        if (!isThereZombie() && isAlive())
        {
        game.goRoom(new Command("go","north"));
        game.getCurrentRoom().onEnter();
        scene.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getCurrentRoom().getImage()))); 
        porte2=isChecked();
            //Enter the guardian lounge for the first time
            if (isTheRoom("in the guardian lounge") && isThereZombie())
            {
            scene.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logegardienzombie.png")));
            characterMessage();
            }
            //Enter the stairs
            else if (isTheRoom("in the stairs"))
            {
            game.player.die();
            setHP();
            setTextInConsole("Pushed by a strange force, you fall down\nthe stairs and break your neck.\n "
                    + "A black veil falls upon your eyes\n"
                    + "and you're never going to wake up again");
            retryPane.setVisible(true);
            }            
        }
        else if (isThereZombie())
        {
            setTextInConsole("You can't escape!");
        }
        launchEnigma();
    }//GEN-LAST:event_upArrowActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        // TODO add your handling code here:
        if (isThereZombie())
        {
            String text = instructions.getText()
                    + "\nTo fight it, use the 'Choices'\n"
                    + "button. Once you choose,\n"
                    + "click on 'Go!' \n";
            setTextInConsole(text);
        }
        else
        {
            String text = instructions.getText() + game.printHelp();
            setTextInConsole(text);
        }
        
    }//GEN-LAST:event_helpButtonActionPerformed

    private void goButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goButtonActionPerformed
       
        String choix="";
        
        for (Enumeration<AbstractButton> buttons = buttonGroup1.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();
                if (button.isSelected()) {
                    choix =button.getText();
                }
        }
        Character enemy = game.getCurrentRoom().getCharacter();
        int win;
         if (isTheRoom("in the Head's office")){
             win= game.player.fight(choix, enemy,manche,5);    
         }
         else{
             win= game.player.fight(choix, enemy,manche,2);    
         }
        
        System.out.println(win);
        if (win==1){
            goButton.setVisible(false);
            manche=1;
            setTextInConsole("You defeated the enemy.");
            if (isTheRoom("in the Head's office"))
            {
                //Wait();
                game.goRoom(new Command("go","east"));
                scene.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getCurrentRoom().getImage())));
            }
            if (isTheRoom("in the guardian lounge")){
                addTextInConsole("\nHe dropped an old key."
                + "\nYou decided to take it."
                + "\nThe key has been added to\nyou're inventory.");
                game.player.takeItem(game.item);
                refreshItemList();
            }
            game.getCurrentRoom().removeCharacter();
            scene.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getCurrentRoom().getImage())));
            addTextInConsole("\nThe combat is over.");
            setHP();
            setChoicesInvisible();
        }
        else if(win==2){
            manche++;
            
            if (game.getCurrentRoom().getDescription()=="in the Head's office")
            {
                // Wait();
                addTextInConsole("\n You hit the zombie! Come on I can kill him !");
               
            }
            else {
                setTextInConsole("You hurt your enemys");
            }
            setHP();
             if (!isAlive())
                 {
                retryPane.setVisible(true);
            }
        }
        else{
            if (game.getCurrentRoom().getDescription()=="in the Head's office")
            {
                if(!isAlive()){
                    game.goRoom(new Command("go","north"));
                    scene.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getCurrentRoom().getImage())));
                }
            }
            addTextInConsole("\n Keep Fighting");
            setHP(); 
            }
        buttonGroup1.clearSelection();
    }//GEN-LAST:event_goButtonActionPerformed

    private void retryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retryButtonActionPerformed
        // TODO add your handling code here:
//        new Game();
        JFrame parent = (JFrame) this.getParent();
        this.dispose();
//        NewJDialog.main(null);
        NewJDialog.game = new Game();
        mainWindow = new NewJDialog(parent,true);
        mainWindow.setVisible(true);
    }//GEN-LAST:event_retryButtonActionPerformed

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_quitButtonActionPerformed

    private void itemListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemListActionPerformed

    private void okEnigmaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okEnigmaButtonActionPerformed
        // TODO add your handling code here:
        enigmaDialog.setVisible(false);
        String choice="";
        
        
        for (Enumeration<AbstractButton> buttons = enigmaButtons.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();
                if (button.isSelected()) {
                    choice =button.getText();
                }
        }
        CharacterEnigma sphynx = (CharacterEnigma)game.getCurrentRoom().getCharacter();
        //Item reward = sphynx.getReward(choice, sphynx);
        
        
    }//GEN-LAST:event_okEnigmaButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
                ;
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                NewJDialog dialog = new NewJDialog(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
                mainWindow = new NewJDialog(new javax.swing.JFrame(),true);
                mainWindow.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                mainWindow.setVisible(true);
            }
        });

    }


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton answer1;
    private javax.swing.JRadioButton answer2;
    private javax.swing.JRadioButton answer3;
    private javax.swing.JRadioButton answer4;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton choicesButton;
    private javax.swing.JButton downArrow;
    private javax.swing.ButtonGroup enigmaButtons;
    private javax.swing.JDialog enigmaDialog;
    private javax.swing.JButton goButton;
    private javax.swing.JButton helpButton;
    private javax.swing.JLabel hpCounter;
    private javax.swing.JTextArea instructions;
    private javax.swing.JComboBox itemList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton leftArrow;
    private javax.swing.JButton okEnigmaButton;
    private javax.swing.JButton quitButton;
    private javax.swing.JButton retryButton;
    private javax.swing.JDialog retryPane;
    private javax.swing.JButton rightArrow;
    private javax.swing.JLabel scene;
    private javax.swing.JButton upArrow;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jan
 */
//class Retry extends javax.swing.JDialog {
//
//    /**
//     * Creates new form Retry
//     */
//    public Retry(java.awt.Frame parent, boolean modal) {
//        super(parent, modal);
//        initComponents();
//    }
//    
//    private boolean retry;
//    
//    public boolean playAgain()
//    {
//        return retry;
//    }
//
//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    @SuppressWarnings("unchecked")
//    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
//    private void initComponents() {
//
//        jLabel3 = new javax.swing.JLabel();
//        jLabel2 = new javax.swing.JLabel();
//        quitButton = new javax.swing.JButton();
//        retryButton = new javax.swing.JButton();
//
//        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
//
//        jLabel3.setText("Try again?");
//
//        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
//        jLabel2.setText("YOU ARE DEAD!");
//
//        quitButton.setText("No, I quit");
//        quitButton.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                quitButtonActionPerformed(evt);
//            }
//        });
//
//        retryButton.setText("Yes!");
//        retryButton.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                retryButtonActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
//        getContentPane().setLayout(layout);
//        layout.setHorizontalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addComponent(jLabel2)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//            .addGroup(layout.createSequentialGroup()
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addComponent(jLabel3)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//            .addGroup(layout.createSequentialGroup()
//                .addGap(37, 37, 37)
//                .addComponent(retryButton)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
//                .addComponent(quitButton)
//                .addGap(30, 30, 30))
//        );
//        layout.setVerticalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(layout.createSequentialGroup()
//                .addGap(20, 20, 20)
//                .addComponent(jLabel2)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addComponent(jLabel3)
//                .addGap(30, 30, 30)
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(retryButton)
//                    .addComponent(quitButton))
//                .addContainerGap(56, Short.MAX_VALUE))
//        );
//
//        pack();
//    }// </editor-fold>                        
//
//    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
//        // TODO add your handling code here:
//        retry = false;
//    }                                          
//
//    private void retryButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
//        // TODO add your handling code here:
//        retry = true;
//    }                                           
//
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Retry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Retry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Retry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Retry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                Retry dialog = new Retry(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }
//
//    // Variables declaration - do not modify                     
//    private javax.swing.JLabel jLabel2;
//    private javax.swing.JLabel jLabel3;
//    private javax.swing.JButton quitButton;
//    private javax.swing.JButton retryButton;
//    // End of variables declaration                   
//}

